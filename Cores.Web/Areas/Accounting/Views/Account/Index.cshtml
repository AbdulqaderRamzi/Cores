@model IEnumerable<Account>

<!-- Index.cshtml -->
<div class="card shadow mb-4">
    <div class="card-header py-3">
        <div class="d-flex justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold text-primary">Chart of Accounts</h6>
            <a class="btn btn-secondary" asp-controller="Account" asp-action="Upsert">
                <i class="fas fa-plus-circle"></i> Create Account
            </a>
        </div>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>Code</th>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Category</th>
                        <th>Balance</th>
                        <th>Status</th>
                        <th>Created By</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th>Code</th>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Category</th>
                        <th>Balance</th>
                        <th>Status</th>
                        <th>Created By</th>
                        <th>Actions</th>
                    </tr>
                </tfoot>
                <tbody class="text-dark">
                    @foreach (var account in Model)
                    {
                        <tr>
                            <td>@account.Code</td>
                            <td>@account.Name</td>
                            <td>@account.Type</td>
                            <td>@account.Category</td>
                            <td>@account.Balance.ToString("N2")</td>
                            <td>@(account.IsActive ? "Active" : "Inactive")</td>
                            <td>@account.CreatedBy</td>
                            <td>
                                <div class="dropdown">
                                    <button class="btn btn-primary dropdown-toggle" type="button"
                                            id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true"
                                            aria-expanded="false">
                                        Actions
                                    </button>
                                    <div class="dropdown-menu animated--fade-in"
                                         aria-labelledby="dropdownMenuButton">
                                        <a class="dropdown-item" href="javascript:void(0);" onclick="showTransactions(@account.Id)"
                                           onmouseover="this.style.backgroundColor='#f6a23e'; this.style.color='white';"
                                           onmouseout="this.style.backgroundColor=''; this.style.color='';">
                                            <i class="fas fa-history"></i> Transactions
                                        </a>
                                        <a class="dropdown-item" asp-controller="Account" asp-action="Upsert" asp-route-id="@account.Id"
                                           onmouseover="this.style.backgroundColor='#5cb85e'; this.style.color='white';"
                                           onmouseout="this.style.backgroundColor=''; this.style.color='';">
                                            <i class="fas fa-edit"></i> Update
                                        </a>
                                        <a class="dropdown-item" asp-controller="Account" asp-action="Delete" asp-route-id="@account.Id"
                                           onmouseover="this.style.backgroundColor='#b85c5c'; this.style.color='white';"
                                           onmouseout="this.style.backgroundColor=''; this.style.color='';">
                                            <i class="fas fa-edit"></i> Delete
                                        </a>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Transactions Modal -->
<div class="modal fade" id="transactionModal" tabindex="-1">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Account Transactions</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="table-bordered">                    
                    <table class="table" id="transactionsTable" width="100%">
                        <thead>
                        <tr>
                            <th>Date</th>
                            <th>Reference</th>
                            <th>Description</th>
                            <th>Debit</th>
                            <th>Credit</th>
                        </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>

   function showTransactions(id) {
     // Destroy existing DataTable instance if it exists
         if ($.fn.DataTable.isDataTable('#transactionsTable')) {
             $('#transactionsTable').DataTable().destroy();
         }
     
         // Clear previous rows
         $('#transactionsTable tbody').empty();
         
       // Initialize DataTable with enhanced configuration
       $('#transactionsTable').DataTable({
           ajax: {
               url: '/Accounting/Account/GetAccountTransactions',
               data: { accountId: id },
               type: 'GET'
           },
           columns: [
               {
                   data: 'date',
                   render: function(data) {
                       // Format the date without using moment.js
                       return new Date(data).toISOString().slice(0, 10);
                   }
               },
               { data: 'referenceNo' },
               { data: 'description' },
               {
                   data: 'debit',
                   render: function(data) {
                       // Format the debit amount
                       return data ? data.toFixed(2) : '0.00';
                   }
               },
               {
                   data: 'credit',
                   render: function(data) {
                       // Format the credit amount
                       return data ? data.toFixed(2) : '0.00';
                   }
               }
           ],
           // Optional: Add error handling
           error: function(xhr, error, thrown) {
               console.error('DataTables error:', error);
               alert('Error loading transactions');
           }
       });
    
       // Show the modal
       $('#transactionModal').modal('show');
   }
   </script>
}